services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_USER=${POSTGRES_USER}"
    ports:
      - "5432:5432"
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    extra_hosts: [ "host.docker.internal:host-gateway" ]
    ports:
      - "9411:9411"
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine  # RabbitMQ image with management plugin
    ports:
      - "5672:5672"  # Map container port 5672 to host port 5672 (AMQP)
      - "15672:15672"  # Map container port 15672 to host port 15672 (Web UI)
    environment:
      RABBITMQ_DEFAULT_USER: ${SPRING_RABBITMQ_USER}  # Set username for RabbitMQ management UI
      RABBITMQ_DEFAULT_PASS: ${SPRING_RABBITMQ_PASS}  # Set password for RabbitMQ management UI
  keycloak:
    container_name: keycloak
    image: bitnami/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_HOSTNAME: localhost
      KEYCLOAK_HTTP_PORT: 8080
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: true
      KEYCLOAK_DATABASE_VENDOR: postgresql
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_DATABASE_PORT: 5432
      KEYCLOAK_DATABASE_NAME: ${POSTGRES_DB}
      KEYCLOAK_DATABASE_USER: ${POSTGRES_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "80:8080"
    restart: always
    depends_on:
      - postgres
  config-service:
    image: config-service:0.0.1-SNAPSHOT
    ports:
      - "8088:8088"
    healthcheck:
      test: curl --fail http://localhost:8088/employee/docker  || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
  discovery-service:
    image: discovery-service:0.0.1-SNAPSHOT
    ports:
      - "8061:8061"
    depends_on:
      config-service:
        condition: service_healthy
    links:
      - config-service
    healthcheck:
      test: curl --fail http://localhost:8061/eureka/v2/apps || exit 1
      interval: 4s
      timeout: 2s
      retries: 3
    environment:
      SPRING_PROFILES_ACTIVE: docker
  employee-service:
    image: employee-service:0.0.1-SNAPSHOT
    ports:
      - "8080"
    depends_on:
      discovery-service:
        condition: service_healthy
    links:
      - config-service
      - discovery-service
      - zipkin
    environment:
      SPRING_PROFILES_ACTIVE: docker
  department-service:
    image: department-service:0.0.1-SNAPSHOT
    ports:
      - "8080"
    depends_on:
      discovery-service:
        condition: service_healthy
    links:
      - config-service
      - discovery-service
      - employee-service
      - zipkin
    environment:
      SPRING_PROFILES_ACTIVE: docker
  organization-service:
    image: organization-service:0.0.1-SNAPSHOT
    ports:
      - "8080"
    depends_on:
      discovery-service:
        condition: service_healthy
    links:
      - config-service
      - discovery-service
      - employee-service
      - department-service
      - zipkin
    environment:
      SPRING_PROFILES_ACTIVE: docker
  gateway-service:
    image: gateway-service:0.0.1-SNAPSHOT
    ports:
      - "8060:8060"
    depends_on:
      discovery-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    links:
      - config-service
      - discovery-service
      - employee-service
      - department-service
      - organization-service
      - zipkin
